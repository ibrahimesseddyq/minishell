############## Errors & TODO (certain)

- handle CTRL D and CTRL C  in herdoc when executing builtins

minishell:>$ export ARG="*"
cmd is [export] and arg is [ARG="*"]



/usr/bin/printf "%s\n" "*"* | sort





touch tmp_out1                              OK
touch tmp_out2                             OK
/bin/echo 42 >tmp_out*                             OK
rm -f "tmp_out*"                             KO


/usr/bin/printf "%s\n" "*"* | sort               KO
/usr/bin/printf "%s\n" "Mak"'e'*'*' | sort      KO          
/usr/bin/printf "%s\n" "."* | sort              KO
/usr/bin/printf "%s\n" "*" | sort           KO

/usr/bin/printf "%s\n" '*' | sort           KO
export test=" arg1 arg2 "
echo 'echo $1' > tmp_test_sh  found fd leaks
############### Notes

-Garbage collector


-Fd leaks // till now no leak but you should test

-problem in Pipes // Maybe OK should be tested more

i should handle fd leaks when signaling HEREDOC

// protect NB_DEFAULT from stack_overflow and heap_overflow

// recheck export and unset
 // test bonus

// check expand in Heredoc and after redir // to check

export accept just some chars






recheck this test i think it fails:
cat < Makefile > out >> out1 | wc -l out1 > out2
cat < Makefile > out >> out1 | wc -l out1 > out2
/bin/rm -f out
/bin/rm -f out1
/bin/rm -f out2


// 
int	ft_redirection(t_astnode *ast, t_lst *env, int command_exist)
{
	int	fd;
	int	last_arr[2];
	int	i;

	(1) && (last_arr[0] = get_last_redirs(ast)[0],
		last_arr[1] = get_last_redirs(ast)[1], i = -1);
	if (last_arr[0] == 0 && last_arr[1] == 0)
		return (1);
	while (ast->t_cmd.redirections)
	{
		if ((ast->t_cmd.redirections->redir->type == NODE_REDIRECT_OUT
				|| ast->t_cmd.redirections->redir->type == NODE_REDIRECT_APPEND)
			&& ast->t_cmd.redirections->redir)
		{
			fd = ft_red_out(ast, env, last_arr[1] == ++i, command_exist);
			if (last_arr[1] != i)
			{
				printf("fd is [%d]\n", fd);
				ft_close(&fd);
			}
		}
		else
		{
			fd = ft_red_in(ast, env, last_arr[0] == ++i, command_exist);
			if (last_arr[0] != i)
				ft_close(&fd);
		}
		if (fd == -2)
			return (-2);
		ast->t_cmd.redirections = ast->t_cmd.redirections->next;
	}
	return (fd);
}


RED LBAL MEN HADI !!!!!!!!!!!!!!!
			if (last_arr[1] != i)
			{
				printf("fd is [%d]\n", fd);
				ft_close(&fd);
			}